---
import Layout from "../../layouts/Layout.astro";

import { getCollection } from "astro:content";
// 1. Generate a new path for every collection entry
export async function getStaticPaths() {
  const blogEntries = await getCollection("markdown");
  return blogEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}
// 2. When it's time to render, you can get the entry directly from the prop
const { entry } = Astro.props;
const { Content } = await entry.render();
---

<Layout title={`${entry.data.title} | Astro-MD-Sample`}>
  <main class="my-6 mx-8">
    <div class="link-card">
      <a href="/"><span>&larr;</span> トップにもどる</a>
    </div>
    <h1 class="mt-8">{entry.data.title}</h1>
    <Content />
  </main>
</Layout>

<style>
  .link-card {
    list-style: none;
    display: flex;
    padding: 0.25rem;
    width: fit-content;
    background-color: white;
    background-image: none;
    background-size: 400%;
    border-radius: 0.6rem;
    background-position: 100%;
    transition: background-position 0.6s cubic-bezier(0.22, 1, 0.36, 1);
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1),
      0 2px 4px -2px rgba(0, 0, 0, 0.1);
  }

  .link-card > a {
    text-decoration: none;
    line-height: 1.4;
    padding: 0.65rem 1.3rem;
    border-radius: 0.35rem;
    color: #111;
    background-color: white;
    opacity: 0.8;
  }
  .link-card:is(:hover, :focus-within) {
    background-position: 0;
    background-image: var(--accent-gradient);
  }
  .link-card:is(:hover, :focus-within) a {
    color: rgb(var(--accent));
  }

  :global(h1) {
    font-size: 3rem;
    font-weight: 800;
    margin: 0;
    margin-top: 1.5rem;
  }
  :global(h2) {
    font-size: 2.2rem;
    font-weight: 800;
    margin: 0;
    margin-top: 1.5rem;
  }
  :global(h3) {
    font-size: 1.8rem;
    font-weight: 600;
    margin: 0;
    margin-top: 1.3rem;
  }
  :global(h4) {
    font-size: 1.5rem;
    font-weight: 600;
    margin: 0;
    margin-top: 1.3rem;
  }
  :global(p, ul) {
    margin: 1rem;
  }
  :global(ul) {
    list-style: disc;
  }
  :global(a) {
    color: rgb(19, 115, 211);
  }
  :global(a:hover) {
    text-decoration: underline;
  }
</style>
